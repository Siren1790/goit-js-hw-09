{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAO,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,EAlCA,CACXO,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAAUC,IACnCA,EAAEC,iBACF,IAAIZ,EAAQW,EAAEE,OAAOb,MAAMc,cACvBC,EAAOJ,EAAEE,OAAOE,KAAKD,cACrBE,EAASL,EAAEE,OAAOG,OAAOF,cAE7B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BnB,EAAcmB,EAAGjB,GACdkB,MAAKC,IACJC,EAAAxB,GAASyB,OAAOC,QAAQH,EAAM,IAE/BI,OAAMJ,IACLC,EAAAxB,GAASyB,OAAOG,QAAQL,EAAM,IAElCnB,GAASe,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  let delay = e.target.delay.valueAsNumber;\n  let step = e.target.step.valueAsNumber;\n  let amount = e.target.amount.valueAsNumber;\n  \n  for (let i = 1; i <= amount; i++){\n    createPromise(i, delay)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(value => {\n        Notiflix.Notify.failure(value);\n      })\n    delay += step;\n\n  }\n});\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }      \n    }, delay);\n  });\n\n  return promise;\n};"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","addEventListener","e","preventDefault","target","valueAsNumber","step","amount","i","then","value","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.aa3accee.js.map"}